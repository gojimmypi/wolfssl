name: Arduino CI Build (1 of 4) wolfssl

#
# Test fetches wolfssl-examples/Arduino and uses local, latest github master branch wolfssl
#
# These 4 workflows across 3 repos are interdependent for the current $REPO_OWNER:
#
# THIS Arduino CI Build 1: https://github.com/$REPO_OWNER/wolfssl          #  /.github/workflows/arduino.yml
#   - Builds Arduino library from local clone of wolfssl master branch
#   - Fetches examples from https://github.com/$REPO_OWNER/wolfssl-examples
#
# Arduino CI Build 2: https://github.com/$REPO_OWNER/wolfssl-examples      #  /.github/workflows/arduino-release.yml
#    - Tests examples based on latest published release of Arduino library, NOT latest on wolfssl github.
#    - Should be identical to Arduino CI Build 3 in every way but wolfssl install.
#    - Copies only compile script from wolfssl-examples
#    - Builds local examples
#    - No other repos used
#
# Arduino CI Build 3: https://github.com/$REPO_OWNER/wolfssl-examples      #  /.github/workflows/arduino.yml
#   - Fetches current wolfSSL from https://github.com/$REPO_OWNER/wolfssl
#   - Creates an updated Arduino library
#   - Compiles local examples
#   - Contains the source of `compile-all-examples.sh` and respective board-list.txt
#
# Arduino CI Build 4: https://github.com/$REPO_OWNER/Arduino-wolfssl       #  /.github/workflows/arduino.yml
#    - Assembles and installs an updated Arduino wolfssl library from LOCAL wolfssl master source
#    - Copies only compile script copied from wolfssl-examples
#    - Builds local examples
#    - No other repos used
#
# Arduino CI Build 4: https://github.com/$REPO_OWNER/Arduino-wolfssl       #  /.github/workflows/arduino-release.yml
#    - Tests examples based on latest published release of Arduino library, NOT wolfssl github.
#    - Should be identical to Arduino CI Build 3 in every way but wolfssl install.
#    - Copies only compile script from wolfssl-examples
#    - Builds local examples
#    - No other repos used

# ** NOTE TO MAINTAINERS **
#
# Suggest using winmerge or similar tool to keep the 3 arduino.yml files in relative sync.
# Although there are some specific differences, most of the contents are otherwise identical.
#
# See https://github.com/wolfSSL/Arduino-wolfSSL
#
# To test locally:
# cd [your WOLFSSL_ROOT], e.g. cd /mnt/c/workspace/wolfssl-$USER
# [optional checkout] e.g.     git checkout tags/v5.8.2-stable
# pushd ./IDE/ARDUINO
# export ARDUINO_ROOT="$HOME/Arduino/libraries"
# ./wolfssl-arduino.sh INSTALL
# cd [your WOLFSSL_EXAMPLES_ROOT] e.g. /mnt/c/workspace/wolfssl-examples-$USER
# cd


# START OF COMMON SECTION
on:
  push:
    branches: [ '**', 'master', 'main', 'release/**' ]
    paths:
      - '.github/workflows/arduino.yml'
      - 'IDE/ARDUINO/**'
      - 'src/**'
      - 'wolfcrypt/**'
      - 'wolfssl/**'
  pull_request:
    branches: [ '**' ]
    paths:
      - 'github/workflows/arduino.yml'
      - 'IDE/ARDUINO/**'
      - 'src/**'
      - 'wolfcrypt/**'
      - 'wolfssl/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  build:
    # if: github.repository_owner == 'wolfssl'
    runs-on: ubuntu-latest
    env:
      REPO_OWNER: ${{ github.repository_owner }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Arduino CLI
        run: |
          # Script to fetch and run install.sh from arduino/arduino-cli

          # The install script will test to see if the recently installed apps in in the path
          # So set it up in advance:
          mkdir -p "${PWD}/bin"
          echo "${PWD}/bin" >> $GITHUB_PATH

          # Run install script:
          curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh

      - name: Confirm Arduino CLI install
        run: arduino-cli version

      - name: Setup Arduino CLI
        run: |
          arduino-cli config init
          arduino-cli core update-index
          arduino-cli config add board_manager.additional_urls https://www.pjrc.com/teensy/package_teensy_index.json
          arduino-cli core update-index
          arduino-cli config add board_manager.additional_urls https://arduino.esp8266.com/stable/package_esp8266com_index.json
          arduino-cli core update-index
          arduino-cli core install esp32:esp32      # ESP32
          arduino-cli core install arduino:avr      # Arduino Uno, Mega, Nano
          arduino-cli core install arduino:sam      # Arduino Due
          arduino-cli core install arduino:samd     # Arduino Zero
          arduino-cli core install teensy:avr       # PJRC Teensy
          arduino-cli core install esp8266:esp8266  # ESP8266
          arduino-cli lib install "ArduinoJson"     # Example dependency
          arduino-cli lib install "WiFiNINA"        # ARDUINO_SAMD_NANO_33_IOT
          arduino-cli lib install "Ethernet"        # Install Ethernet library
          arduino-cli lib install "Bridge"          # Pseudo-network for things like arduino:samd:tian

          # arduino-cli lib install "wolfSSL"  # Install wolfSSL library from Arduino

      - name: Set job environment variables
        run: |
          # Script to assign some common environment variables after everything is installed
          echo "GITHUB_WORK=$(realpath           "$GITHUB_WORKSPACE/../..")"  >> "$GITHUB_ENV"
          echo "ARDUINO_ROOT=$(realpath          "$HOME/Arduino/libraries")"  >> "$GITHUB_ENV"

          # Show repo-specific location of examples:
          echo "WOLFSSL_EXAMPLES_ROOT=$(realpath "./Arduino/sketches")"       >> "$GITHUB_ENV"

          # Show predefined summary:
          echo "GITHUB_WORKSPACE      = $GITHUB_WORKSPACE"

          # Show assigned build:env values (e.g. "wolfssl", "gojimmpi" or other owners):
          echo "REPO_OWNER            = $REPO_OWNER"

          # Show our custom values:
          echo "GITHUB_WORK           = $GITHUB_WORK"
          echo "ARDUINO_ROOT          = $ARDUINO_ROOT"
          echo "WOLFSSL_EXAMPLES_ROOT = $WOLFSSL_EXAMPLES_ROOT"


          # Install current wolfSSL as an Arduino library:
      - name: Get wolfssl-examples
        run: |
          # Fetch Arduino examples from the wolfssl-examples repo
          echo "Start pwd:"
          pwd
          # we're typically in $GITHUB_WORKSPACE=/home/runner/work/wolfssl/wolfssl
          # goto /home/runner/work to fetch wolfssl-examples

          echo "Current pwd for wolfssl-examples clone fetch: $(pwd)"
          GITHUB_WORK=$(realpath "$GITHUB_WORKSPACE/../..")
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"

          # Typically /home/runner/work
          echo "GITHUB_WORK=$GITHUB_WORK"

          pushd "$GITHUB_WORK"
          echo "Updated pwd for wolfssl-examples clone fetch: $(pwd)"

          git clone --depth 1 https://github.com/$REPO_OWNER/wolfssl-examples.git wolfssl-examples-publish
          cd ./wolfssl-examples-publish
          echo "WOLFSSL_EXAMPLES_ROOT=$(pwd)"

          # fetch open PR changes
          git remote add gojimmypi https://github.com/$REPO_OWNER/wolfssl-examples.git
          git fetch --depth 1 gojimmypi examples_dev
          git checkout examples_dev
          echo "Path for wolfssl-examples-publish: $(pwd)"
          popd



      - name: Install wolfSSL Arduino library
        run: |
          echo "Run the local wolfssl-arduino.sh install script to install wolfssl Arduino library."
          echo "Current pwd for wolfssl-examples clone fetch: $(pwd)"
          GITHUB_WORK=$(realpath "$GITHUB_WORKSPACE/../..")
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"

          # Typically /home/runner/work
          echo "GITHUB_WORK=$GITHUB_WORK"
          pwd
          pushd ./IDE/ARDUINO

          # Set default ARDUINO_ROOT. TODO: once script is updated, this should be removed.
          export ARDUINO_ROOT="$HOME/Arduino/libraries"
          export WOLFSSL_EXAMPLES_ROOT="$GITHUB_WORK/wolfssl-examples-publish"

          echo "ARDUINO_ROOT=$WOLFSSL_EXAMPLES_ROOT"
          echo "WOLFSSL_EXAMPLES_ROOT=$WOLFSSL_EXAMPLES_ROOT"

          bash wolfssl-arduino.sh INSTALL  # Install wolfSSL library
          popd

      # This will fail with Arduino published wolfSSL v5.7.6 and older
      # as the examples moved. See https://github.com/wolfSSL/wolfssl/pull/8514
      #
      - name: Compile Arduino Sketches for various boards
        run: |
          # Run the compile-all-examples.sh script for the cloned wolfssl-example

          echo "Current pwd: $(pwd)"
          echo "WOLFSSL_EXAMPLES_ROOT=$WOLFSSL_EXAMPLES_ROOT"

          pushd $WOLFSSL_EXAMPLES_ROOT/Arduino
          ./compile-all-examples.sh
          popd

      - name: Upload Compilation Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compiled-sketch
          path: Arduino/sketches/template/build/*
